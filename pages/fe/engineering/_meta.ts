export default {
  "9": "【Q008】当新入职一家公司时，如何快速搭建开发环境并让应用跑起来",
  "84": "【Q083】网站性能优化都有哪些点",
  "95": "【Q094】你们的前端代码上线部署一次需要多长时间，需要人为干预吗",
  "103": "【Q102】有没有用 npm 发布过 package，如何发布",
  "138": "【Q137】js 代码压缩 minify 的原理是什么",
  "154": "【Q153】权限设计中的 RABC 是指什么",
  "157": "【Q156】如何进行代码质量检测",
  "190": "【Q189】performance API 中什么指标可以衡量首屏时间",
  "192": "【Q191】什么是 Open Graph 协议，用来做什么",
  "193": "【Q192】简述你们前端项目中资源的缓存配置策略",
  "194": "【Q193】如何加速 npm install",
  "195": "【Q194】npm i 与 npm ci 的区别是什么",
  "196": "【Q195】package-lock.json 有什么作用，如果项目中没有它会怎么样，举例说明",
  "201": "【Q200】前端如何进行多分支部署",
  "237": "【Q236】主域名的 SEO 是否比二级域名要更好",
  "252": "【Q250】刚刚启动了一个服务，如何知道这个服务对应的端口号是多少",
  "257": "【Q255】图片防盗链原理是什么",
  "270": "【Q268】你如何看待 serverless",
  "271": "【Q269】什么是 XSS 攻击，如何避免",
  "274": "【Q272】如何查看你们 JS 项目中应采用的 node 版本",
  "278": "【Q276】如何查看 node_modules(某一文件夹) 的体积有多大",
  "294": "【Q292】peerDependency 是为了解决什么问题",
  "295": "【Q293】semver 指什么，试图解释一下",
  "296": "【Q294】optionalDependencies 的使用场景是什么",
  "298": "【Q296】package-lock.json 与 yarn.lock 有什么区别",
  "378": "【Q373】如何为你们的前端项目选择状态管理器",
  "391": "【Q386】什么是浏览器的关键渲染路径",
  "412": "【Q405】你使用过哪些前端性能分析工具",
  "422": "【Q415】你有没有重客户端状态前端应用的经验",
  "430": "【Q423】什么是安全的正则表达式",
  "435": "【Q428】在 nginx 中如何配置负载均衡",
  "475": "【Q467】前端打包时 cjs、es、umd 模块有何不同",
  "495": "【Q486】什么是前端工程化",
  "497": "【Q488】JWT 的原理是什么",
  "507": "【Q498】什么是服务器渲染 (SSR)",
  "513": "【Q503】Core Web Vitals 是什么，它有哪些指标",
  "521": "【Q508】dependencies 与 devDependencies 有何区别",
  "522": "【Q509】如何确认你们项目是否依赖某一个依赖项",
  "523": "【Q510】当你引入某一个依赖项时，你引入的是该依赖下的哪一个文件",
  "524": "【Q511】npm workspaces 解决了什么问题",
  "533": "【Q520】如何为一个项目指定 node 版本号",
  "534": "【Q521】什么是 semver，~1.2.3 与 ^1.2.3 的版本号范围是多少",
  "535": "【Q522】package.json 中 main/module/browser/exports 字段有何区别",
  "536": "【Q523】npm publish 时 npm script 的生命周期",
  "537": "【Q524】前端项目每次 npm install 之后需要执行一些处理工作，应该怎么办",
  "552": "【Q538】你是如何保障你们项目质量的",
  "591": "【Q576】如何正确得知某张图片的 MIME 格式",
  "600": "【Q584】现代前端应用应如何配置 HTTP 缓存机制",
  "603": "【Q587】使用 webpack 如何分包",
  "613": "【Q597】引入 BFF 层的优势在哪里",
  "642": "【Q624】同一页面三个组件请求同一个 API 发送了三次请求，如何优化",
  "644": "【Q626】如何压缩前端项目中 JS 的体积",
  "654": "【Q636】你们项目中使用了哪些依赖/第三方库",
  "664": "【Q646】如何禁止打开浏览器控制台",
  "688": "【Q670】如何提高首屏渲染时间？",
  "719": "【Q697】npm 执行命令传递参数时，为何需要双横线",
  "722": "【Q700】http client 中如何得知已接收完所有响应数据",
  "734": "【Q709】core-js 是做什么用的？",
  "739": "【Q714】如何处理白屏错误页的监控的？",
  "740": "【Q715】简述 npm script 的生命周期",
  "741": "【Q716】git hooks 原理是什么",
  "742": "【Q717】如何检测出你们安装的依赖是否安全",
  "744": "【Q718】请简述下 eslint 的作用",
  "745": "【Q719】在项目中，如何平滑升级 npm 包",
  "746": "【Q720】请描述 node_modules 的目录结构(拓扑结构)",
  "747": "【Q721】npm 第三方库需要提交 lockfile 吗",
  "748": "【Q722】请问什么是 CICD",
  "749": "【Q723】如何使用 docker 部署前端",
  "751": "【Q725】pnpm 有什么优势",
  "752": "【Q726】浏览器中如何使用原生的 ESM",
  "753": "【Q727】如何将 CommonJS 转化为 ESM",
  "754": "【Q728】如何对 npm package 进行发包",
  "756": "【Q730】什么是 AST，及其应用",
  "757": "【Q731】简述 browserslist 的意义",
  "758": "【Q732】简述 bundless 的优势与不足",
  "759": "【Q733】简述 npm cache",
  "760": "【Q734】如何修复某个 npm 包的紧急 bug",
  "761": "【Q735】前端如何进行高效的分包",
  "762": "【Q736】前端如何对分支环境进行部署",
  "772": "【Q740】vite 中是如何处理 new URL 资源的",
  "794": "【Q748】在 babel 编译为低版本 ES 时，为何能够编译可选链之类语法，但无法编译 API",
  "index": "汇总"
}